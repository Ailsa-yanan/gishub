require(lattice)
library(sp)
data(meuse)
View(meuse)
coordinates(meuse) <- c("x", "y")
spplot(meuse, "zinc", do.log = T, colorkey = TRUE)
bubble(meuse, "zinc", do.log = T, key.space = "bottom")
install.packages("geoR")
install.packages("geoRglm")
install.packages(c("aplpack", "car", "colorspace", "e1071", "effects", "foreign", "gtools", "Hmisc", "igraph", "lmtest", "multcomp", "mvtnorm", "plotrix", "Rcmdr", "rgl", "rJava", "RODBC", "rtop", "SpatioTemporal", "XLConnect", "xlsx", "xlsxjars", "xts", "zoo"))
library("gstat", lib.loc="C:/Users/Qiusheng/Documents/R/win-library/3.0")
require(lattice)
library(sp)
data(meuse)
View(meuse)
coordinates(meuse) <- c("x", "y")
data(meuse)
View(meuse)
coordinates(meuse) <- c("x", "y")
? spplot
spplot(meuse, "zinc", do.log = T, colorkey = TRUE)
bubble(meuse, "zinc", do.log = T, key.space = "bottom")
xyplot(log(zinc) ~ sqrt(dist), as.data.frame(meuse))
zn.lm <- lm(log(zinc)~sqrt(dist), meuse)
summary(zn.lm)
meuse$fitted.s <- predict(zn.lm, meuse) - mean(predict(zn.lm, meuse))
meuse$residuals <- residuals(zn.lm)
spplot(meuse, c("fitted.s", "residuals"))
? meuse.grid
data(meuse.grid)
View(meuse.grid)
coordinates(meuse.grid) <- c("x", "y")
meuse.grid <- as(meuse.grid, "SpatialPixelsDataFrame")
install.packages("spatstat")
library(gstat)
idw.out <- gstat::idw(zinc~1, meuse, meuse.grid, idp = 2.5)
as.data.frame(idw.out)[1:5,]
zn.lm <- lm(log(zinc)~sqrt(dist), meuse)
meuse.grid$pred <- predict(zn.lm, meuse.grid)
meuse.grid$se.fit <- predict(zn.lm, meuse.grid, se.fit=TRUE)$se.fit
meuse.lm <- krige(log(zinc)~sqrt(dist), meuse, meuse.grid)
meuse.tr2 <- krige(log(zinc)~1, meuse, meuse.grid, degree = 2)
lm(log(zinc)~I(x^2)+I(y^2)+I(x*y) + x + y, meuse)
lm(log(zinc) ~ poly(x, y, degree = 2), meuse)
remove.packages("spatial", lib="C:/Program Files/R/R-3.0.0/library")
hscat(log(zinc)~1,meuse,(0:9)*100, pch=3, cex=.6, col = 'grey')
hscat(log(zinc)~1,meuse,(0:9)*100, pch=3, cex=.6, col = 'grey')
library(gstat)
cld <- variogram(log(zinc) ~ 1, meuse, cloud = TRUE)
svgm <- variogram(log(zinc) ~ 1, meuse)
View(svgm)
View(cld)
plot(cld$dist,cld$gamma)
plot(svgm$dist,svgm$gamma)
d <- data.frame(gamma = c(cld$gamma, svgm$gamma),
dist = c(cld$dist, svgm$dist),
id = c(rep("cloud", nrow(cld)), rep("sample variogram", nrow(svgm)))
)
xyplot(gamma ~ dist | id, d,
scales = list(y = list(relation = "free",
#ylim = list(NULL, c(-.005,0.7)))),
limits = list(NULL, c(-.005,0.7)))),
layout = c(1, 2), as.table = TRUE,
panel = function(x,y, ...) {
if (panel.number() == 2)
ltext(x+10, y, svgm$np, adj = c(0,0.5)) #$
panel.xyplot(x,y,...)
},
xlim = c(0, 1590),
cex = .5, pch = 3
)
sel <- plot(variogram(zinc ~ 1, meuse, cloud = TRUE), digitize = TRUE)
plot(sel, meuse)
plot(sel, meuse)
sel <- plot(variogram(zinc ~ 1, meuse, cloud = TRUE), digitize = TRUE)
plot(sel, meuse)
v <- variogram(log(zinc) ~ 1, meuse)
View(v)
plot(variogram(log(zinc) ~ 1, meuse))
plot(variogram(log(zinc) ~ 1, meuse, alpha = c(0, 45, 90, 135)))
plot(variogram(log(zinc) ~ 1, meuse, cutoff = 1000, width = 50))
variogram(log(zinc) ~ 1, meuse, boundaries = c(0,50,100,seq(250,1500,250)))
show.vgms()
show.vgms(model = "Mat", kappa.range = c(.1, .2, .5, 1, 2, 5, 10), max = 10)
vgm(1, "Sph", 300)
vgm(1, "Sph", 300, 0.5)
vgm()
v1 <- vgm(1, "Sph", 300, 0.5)
v2 <- vgm(0.8, "Sph", 800, add.to = v1)
v2
vgm(0.5, "Nug", 0)
vgm()
