{
    "contents" : "### R code from vignette source 'cm.Rnw'\n# data: CRAN051001a.txt seamap105_mod.csv auckland_mapgen.dat\n# state.sat.data_mod.txt high.RData auck_el1.RData auck_gshhs.RData\n# auck_el2.RData 70042108.tif\n###################################################\n### code chunk number 8: cm.Rnw:193-194\n###################################################\npi * 10^2\n\n\n###################################################\n### code chunk number 9: cm.Rnw:206-207\n###################################################\n\"*\"(pi, \"^\"(10, 2))\n\n\n###################################################\n### code chunk number 10: cm.Rnw:217-218\n###################################################\npi * (1:10)^2\n\n\n###################################################\n### code chunk number 11: cm.Rnw:236-240\n###################################################\nx <- pi * 10^2\nx\nprint(x)\nprint(x, digits=12)\n\n\n###################################################\n### code chunk number 12: cm.Rnw:250-252\n###################################################\nclass(x)\ntypeof(x)\n\n\n###################################################\n### code chunk number 13: cm.Rnw:287-291\n###################################################\nclass(cars)\ntypeof(cars)\nnames(cars)\nsummary(cars)\n\n\n###################################################\n### code chunk number 14: cm.Rnw:306-307\n###################################################\nstr(cars)\n\n\n###################################################\n### code chunk number 15: cm.Rnw:352-353\n###################################################\nclass(dist ~ speed)\n\n\n###################################################\n### code chunk number 16: cm.Rnw:366-367\n###################################################\nlm(dist ~ speed, data=cars)\n\n\n###################################################\n### code chunk number 17: cm.Rnw:380-382\n###################################################\ncars$qspeed <- cut(cars$speed, breaks=quantile(cars$speed), include.lowest=TRUE)\nis.factor(cars$qspeed)\n\n\n###################################################\n### code chunk number 19: cm.Rnw:392-402\n###################################################\nplot(dist ~ speed, data=cars, main=\"numerical: scatterplot\")\nplot(dist ~ qspeed, data=cars, main=\"factor: boxplots\")\n\n\n###################################################\n### code chunk number 20: cm.Rnw:413-414\n###################################################\nlm(dist ~ qspeed, data=cars)\n\n\n###################################################\n### code chunk number 21: cm.Rnw:485-486\n###################################################\nlibrary(sp)\n\n\n###################################################\n### code chunk number 22: cm.Rnw:488-489 \n###################################################\ngetClass(\"Spatial\")\n\n\n###################################################\n### code chunk number 24: cm.Rnw:510-511\n###################################################\ngetClass(\"CRS\")\n\n\n###################################################\n### code chunk number 25: cm.Rnw:528-533\n###################################################\nm <- matrix(c(0,0,1,1), ncol=2, dimnames=list(NULL, c(\"min\", \"max\")))\ncrs <- CRS(projargs=as.character(NA))\ncrs\nS <- Spatial(bbox=m, proj4string=crs)\nS\n\n\n###################################################\n### code chunk number 27: cm.Rnw:555-558\n###################################################\nbb <- matrix(c(350, 85, 370, 95), ncol=2, dimnames=list(NULL, c(\"min\", \"max\")))\nres <- try(Spatial(bb, proj4string=CRS(\"+proj=longlat\")))\n\n\n###################################################\n### code chunk number 29: cm.Rnw:627-631\n###################################################\nCRAN_df <- read.table(\"CRAN051001a.txt\", header=TRUE)\nCRAN_mat <- cbind(CRAN_df$long, CRAN_df$lat)\nrow.names(CRAN_mat) <- 1:nrow(CRAN_mat)\nstr(CRAN_mat)\n\n\n###################################################\n### code chunk number 31: cm.Rnw:646-647 \n###################################################\ngetClass(\"SpatialPoints\")\n\n\n###################################################\n### code chunk number 33: cm.Rnw:671-674\n###################################################\nllCRS <- CRS(\"+proj=longlat +ellps=WGS84\")\nCRAN_sp <- SpatialPoints(CRAN_mat, proj4string=llCRS)\nsummary(CRAN_sp)\n\n\n###################################################\n### code chunk number 34: cm.Rnw:701-702\n###################################################\nbbox(CRAN_sp)\n\n\n###################################################\n### code chunk number 35: cm.Rnw:720-724\n###################################################\nproj4string(CRAN_sp)\nproj4string(CRAN_sp) <- CRS(as.character(NA))\nproj4string(CRAN_sp)\nproj4string(CRAN_sp) <- llCRS\n\n\n###################################################\n### code chunk number 36: cm.Rnw:739-742\n###################################################\nbrazil <- which(CRAN_df$loc == \"Brazil\")\nbrazil\ncoordinates(CRAN_sp)[brazil,]\n\n\n###################################################\n### code chunk number 37: cm.Rnw:757-758\n###################################################\nsummary(CRAN_sp[brazil,])\n\n\n###################################################\n### code chunk number 38: cm.Rnw:767-769\n###################################################\nsouth_of_equator <- which(coordinates(CRAN_sp)[,2] < 0)\nsummary(CRAN_sp[-south_of_equator,])\n\n\n###################################################\n### code chunk number 39: cm.Rnw:812-813\n###################################################\nstr(row.names(CRAN_df))\n\n\n###################################################\n### code chunk number 40: cm.Rnw:849-853\n###################################################\nCRAN_spdf1 <- SpatialPointsDataFrame(CRAN_mat, CRAN_df, proj4string=llCRS, match.ID=TRUE)\nCRAN_spdf1[4,]\nstr(CRAN_spdf1$loc)\nstr(CRAN_spdf1[[\"loc\"]])\n\n\n###################################################\n### code chunk number 41: cm.Rnw:863-867\n###################################################\ns <- sample(nrow(CRAN_df))\nCRAN_spdf2 <- SpatialPointsDataFrame(CRAN_mat, CRAN_df[s,], proj4string=llCRS, match.ID=TRUE)\nall.equal(CRAN_spdf2, CRAN_spdf1)\nCRAN_spdf2[4,]\n\n\n###################################################\n### code chunk number 42: cm.Rnw:876-878\n###################################################\nCRAN_df1 <- CRAN_df\nrow.names(CRAN_df1) <- sample(c(outer(letters, letters, paste, sep=\"\")), nrow(CRAN_df1))\n\n\n###################################################\n### code chunk number 44: cm.Rnw:883-885\n###################################################\ntry(CRAN_spdf3 <- SpatialPointsDataFrame(CRAN_mat, CRAN_df1, proj4string=llCRS, match.ID=TRUE))\n\n\n###################################################\n### code chunk number 45: cm.Rnw:907-908 \n###################################################\ngetClass(\"SpatialPointsDataFrame\")\n\n\n###################################################\n### code chunk number 47: cm.Rnw:925-927\n###################################################\nnames(CRAN_spdf1)\nstr(model.frame(lat ~ long, data=CRAN_spdf1), give.attr=FALSE)\n\n\n###################################################\n### code chunk number 48: cm.Rnw:937-939\n###################################################\nCRAN_spdf4 <- SpatialPointsDataFrame(CRAN_sp, CRAN_df)\nall.equal(CRAN_spdf4, CRAN_spdf2)\n\n\n###################################################\n### code chunk number 49: cm.Rnw:955-960\n###################################################\nCRAN_df0 <- CRAN_df\ncoordinates(CRAN_df0) <- CRAN_mat\nproj4string(CRAN_df0) <- llCRS\nall.equal(CRAN_df0, CRAN_spdf2)\nstr(CRAN_df0, max.level=2)\n\n\n###################################################\n### code chunk number 50: cm.Rnw:971-976\n###################################################\nCRAN_df1 <- CRAN_df\nnames(CRAN_df1)\ncoordinates(CRAN_df1) <- c(\"long\", \"lat\")\nproj4string(CRAN_df1) <- llCRS\nstr(CRAN_df1, max.level=2)\n\n\n###################################################\n### code chunk number 52: cm.Rnw:1002-1004\n###################################################\nturtle_df <- read.csv(\"seamap105_mod.csv\")\nsummary(turtle_df)\n\n\n###################################################\n### code chunk number 54: cm.Rnw:1021-1027\n###################################################\ntimestamp <- as.POSIXlt(strptime(as.character(turtle_df$obs_date), \"%m/%d/%Y %H:%M:%S\"), \"GMT\")\nturtle_df1 <- data.frame(turtle_df, timestamp=timestamp)\nturtle_df1$lon <- ifelse(turtle_df1$lon < 0, turtle_df1$lon+360, turtle_df1$lon)\nturtle_sp <- turtle_df1[order(turtle_df1$timestamp),]\ncoordinates(turtle_sp) <- c(\"lon\", \"lat\")\nproj4string(turtle_sp) <- CRS(\"+proj=longlat +ellps=WGS84\")\n\n\n###################################################\n### code chunk number 55: cm.Rnw:1031-1034\n###################################################\nlibrary(maptools)\ngshhs.c.b <- system.file(\"share/gshhs_c.b\", package=\"maptools\")\npac <- Rgshhs(gshhs.c.b, level=1, xlim=c(130,250), ylim=c(15,60), verbose=FALSE)\n\n\n###################################################\n### code chunk number 56: cm.Rnw:1039-1051\n###################################################\nplot(pac$SP, axes=TRUE, col=\"khaki2\", xaxs=\"i\", yaxs=\"i\")\nplot(turtle_sp, add=TRUE)\nm_rle <- rle(months(turtle_sp$timestamp))\nclen <- cumsum(m_rle$lengths[-length(m_rle$lengths)])-1\ncrds <- coordinates(turtle_sp)\ntext(crds[clen,], labels=m_rle$values[-1], pos=3, offset=1.5, srt=45)\n\n\n###################################################\n### code chunk number 57: cm.Rnw:1105-1107\n###################################################\ngetClass(\"Line\")\ngetClass(\"Lines\")\n\n\n###################################################\n### code chunk number 58: cm.Rnw:1126-1127\n###################################################\ngetClass(\"SpatialLines\")\n\n\n###################################################\n### code chunk number 59: cm.Rnw:1140-1146\n###################################################\nlibrary(maps)\njapan <- map(\"world\", \"japan\", plot=FALSE)\np4s <- CRS(\"+proj=longlat +ellps=WGS84\")\nlibrary(maptools)\nSLjapan <- map2SpatialLines(japan, proj4string=p4s)\nstr(SLjapan, max.level=2)\n\n\n###################################################\n### code chunk number 60: cm.Rnw:1174-1176\n###################################################\nLines_len <- sapply(slot(SLjapan, \"lines\"), function(x) length(slot(x, \"Lines\")))\ntable(Lines_len)\n\n\n###################################################\n### code chunk number 61: cm.Rnw:1189-1191\n###################################################\nvolcano_sl <- ContourLines2SLDF(contourLines(volcano))\nt(slot(volcano_sl, \"data\"))\n\n\n###################################################\n### code chunk number 63: cm.Rnw:1217-1220\n###################################################\nllCRS <- CRS(\"+proj=longlat +ellps=WGS84\")\nauck_shore <- MapGen2SL(\"auckland_mapgen.dat\", llCRS)\nsummary(auck_shore)\n\n\n###################################################\n### code chunk number 65: cm.Rnw:1227-1239\n###################################################\nlns <- slot(auck_shore, \"lines\")\nislands_auck <- sapply(lns, function(x) {\n  crds <- slot(slot(x, \"Lines\")[[1]], \"coords\")\n  identical(crds[1,], crds[nrow(crds),])\n})\nislands_sl <- auck_shore[islands_auck]\nlist_of_Lines <- slot(islands_sl, \"lines\")\nislands_sp <- SpatialPolygons(lapply(list_of_Lines, function(x) {\n    Polygons(list(Polygon(slot(slot(x, \"Lines\")[[1]], \"coords\"))),\n      ID=slot(x, \"ID\"))\n  }),\n  proj4string=CRS(\"+proj=longlat +ellps=WGS84\"))\n\n\n###################################################\n### code chunk number 66: cm.Rnw:1263-1276\n###################################################\nplot(auck_shore)\nlegend(\"bottomleft\", legend=\"a)\", bty=\"n\")\nplot(auck_shore)\nplot(islands_sp, add=TRUE, col=\"grey\")\nlegend(\"bottomleft\", legend=\"b)\", bty=\"n\")\n\n\n###################################################\n### code chunk number 67: cm.Rnw:1301-1308\n###################################################\nlns <- slot(auck_shore, \"lines\")\ntable(sapply(lns, function(x) length(slot(x, \"Lines\"))))\nislands_auck <- sapply(lns, function(x) {\n  crds <- slot(slot(x, \"Lines\")[[1]], \"coords\")\n  identical(crds[1,], crds[nrow(crds),])\n})\ntable(islands_auck)\n\n\n###################################################\n### code chunk number 68: cm.Rnw:1321-1322\n###################################################\ngetClass(\"Polygon\")\n\n\n###################################################\n### code chunk number 69: cm.Rnw:1353-1354\n###################################################\ngetClass(\"Polygons\")\n\n\n###################################################\n### code chunk number 70: cm.Rnw:1379-1380\n###################################################\ngetClass(\"SpatialPolygons\")\n\n\n###################################################\n### code chunk number 71: cm.Rnw:1401-1412\n###################################################\nislands_sl <- auck_shore[islands_auck]\nlist_of_Lines <- slot(islands_sl, \"lines\")\nislands_sp <- SpatialPolygons(lapply(list_of_Lines, function(x) {\n    Polygons(list(Polygon(slot(slot(x, \"Lines\")[[1]], \"coords\"))),\n      ID=slot(x, \"ID\"))\n  }),\n  proj4string=CRS(\"+proj=longlat +ellps=WGS84\"))\nsummary(islands_sp)\nslot(islands_sp, \"plotOrder\")\norder(sapply(slot(islands_sp, \"polygons\"),\n  function(x) slot(x, \"area\")), decreasing=TRUE)\n\n\n###################################################\n### code chunk number 72: cm.Rnw:1469-1475\n###################################################\nlibrary(maps)\nstate.map <- map(\"state\", plot=FALSE, fill=TRUE)\nIDs <- sapply(strsplit(state.map$names, \":\"), function(x) x[1])\nlibrary(maptools)\nstate.sp <- map2SpatialPolygons(state.map, IDs=IDs,\n  proj4string=CRS(\"+proj=longlat +ellps=WGS84\"))\n\n\n###################################################\n### code chunk number 74: cm.Rnw:1491-1499\n###################################################\nsat <- read.table(\"state.sat.data_mod.txt\", row.names=5, header=TRUE)\nstr(sat)\nid <- match(row.names(sat), row.names(state.sp))\nrow.names(sat)[is.na(id)]\nsat1 <- sat[!is.na(id),]\nstate.spdf <- SpatialPolygonsDataFrame(state.sp, sat1)\nstr(slot(state.spdf, \"data\"))\nstr(state.spdf, max.level=2)\n\n\n###################################################\n### code chunk number 77: cm.Rnw:1516-1519\n###################################################\nrownames(sat1)[2] <- \"Arizona\"\ntry(SpatialPolygonsDataFrame(state.sp, sat1))\n\n\n###################################################\n### code chunk number 78: cm.Rnw:1533-1538\n###################################################\nDC <- \"district of columbia\"\nnot_dc <- !(row.names(state.spdf) == DC)\nstate.spdf1 <- state.spdf[not_dc,]\ndim(state.spdf1)\nsummary(state.spdf1)\n\n\n###################################################\n### code chunk number 79: cm.Rnw:1591-1594\n###################################################\n#library(maptools)\n#high <- Rgshhs(\"/home/rsb/tmp/gshhs/GSHHS220/gshhs/gshhs_h.b\", xlim=c(277,278), ylim=c(45.7,46.2))\n#save(high, file=\"../Data/high.RData\")\n\n\n###################################################\n### code chunk number 80: cm.Rnw:1597-1601\n###################################################\nload(\"high.RData\")\nmanitoulin_sp <- high$SP\n\n\n###################################################\n### code chunk number 81: cm.Rnw:1603-1606\n###################################################\nlength(slot(manitoulin_sp, \"polygons\"))\nsapply(slot(slot(manitoulin_sp, \"polygons\")[[1]], \"Polygons\"), function(x) slot(x, \"hole\"))\nsapply(slot(slot(manitoulin_sp, \"polygons\")[[1]], \"Polygons\"), function(x) slot(x, \"ringDir\"))\n\n\n###################################################\n### code chunk number 82: cm.Rnw:1643-1644\n###################################################\nlibrary(rgeos)\n\n\n###################################################\n### code chunk number 83: cm.Rnw:1646-1648\n###################################################\nmanitoulin_sp <- createSPComment(manitoulin_sp)\nsapply(slot(manitoulin_sp, \"polygons\"), comment)\n\n\n###################################################\n### code chunk number 84: cm.Rnw:1674-1687\n###################################################\nplot(manitoulin_sp, pbg=\"lightsteelblue2\", col=\"khaki2\", usePolypath=FALSE)\ntext(t(sapply(slot(slot(manitoulin_sp, \"polygons\")[[1]], \"Polygons\"), function(x) slot(x, \"labpt\")))[-c(1,2),], label=high$polydata$level[-c(1,2)], col=\"black\", font=2)\ncmt <- unlist(strsplit(sapply(slot(manitoulin_sp, \"polygons\"), comment), \" \"))\nplot(manitoulin_sp, pbg=\"lightsteelblue2\", col=\"khaki2\", usePolypath=FALSE)\ntext(t(sapply(slot(slot(manitoulin_sp, \"polygons\")[[1]], \"Polygons\"), function(x) slot(x, \"labpt\")))[-c(1,2),], label=cmt[-c(1,2)], col=\"black\", font=2)\n\n\n###################################################\n### code chunk number 85: cm.Rnw:1719-1720\n###################################################\ngetClass(\"GridTopology\")\n\n\n###################################################\n### code chunk number 86: cm.Rnw:1732-1739\n###################################################\nbb <- bbox(manitoulin_sp)\nbb\ncs <- c(0.01, 0.01)\ncc <- bb[,1]+(cs/2)\ncd <- ceiling(diff(t(bb))/cs)\nmanitoulin_grd <- GridTopology(cellcentre.offset=cc, cellsize=cs, cells.dim=cd)\nmanitoulin_grd\n\n\n###################################################\n### code chunk number 87: cm.Rnw:1754-1755 \n###################################################\ngetClass(\"SpatialGrid\")\n\n\n###################################################\n### code chunk number 89: cm.Rnw:1772-1775\n###################################################\np4s <- CRS(proj4string(manitoulin_sp))\nmanitoulin_SG <- SpatialGrid(manitoulin_grd, proj4string=p4s)\nsummary(manitoulin_SG)\n\n\n###################################################\n### code chunk number 90: cm.Rnw:1781-1794\n###################################################\n#library(rgdal)\n#auck_el1 <- readGDAL(\"../Data/70042108.tif\")\n#save(auck_el1, file=\"../Data/auck_el1.RData\")\n#library(maptools)\n#auck2 <- Rgshhs(\"/home/rsb/tmp/gshhs/GSHHS220/gshhs/gshhs_f.b\", xlim=c(174.2,175.3), ylim=c(-37.5,-36.5), level=1)\n#auck_gshhs <- auck2$SP\n#auck_gshhs <- createSPComment(auck_gshhs)\n#save(auck_gshhs, file=\"../Data/auck_gshhs.RData\")\nload(\"auck_el1.RData\")\nis.na(auck_el1$band1) <- auck_el1$band1 <= 0\nload(\"auck_gshhs.RData\")\n\n\n###################################################\n### code chunk number 91: cm.Rnw:1818-1823\n###################################################\nclass(auck_el1)\nslot(auck_el1, \"grid\")\nslot(auck_el1, \"bbox\")\nobject.size(auck_el1)\nobject.size(slot(auck_el1, \"data\"))\n\n\n###################################################\n### code chunk number 92: cm.Rnw:1833-1835\n###################################################\nis.na(auck_el1$band1) <- auck_el1$band1 <= 0\nsummary(auck_el1$band1)\n\n\n###################################################\n### code chunk number 93: cm.Rnw:1870-1875\n###################################################\n#auck_el2 <- as(auck_el1, \"SpatialPixelsDataFrame\")\n#save(auck_el2, file=\"../Data/auck_el2.RData\")\nload(\"auck_el2.RData\")\n\n\n###################################################\n### code chunk number 95: cm.Rnw:1880-1885\n###################################################\nobject.size(auck_el2)\nobject.size(slot(auck_el2, \"grid.index\"))\nobject.size(slot(auck_el2, \"coords\"))\nsum(is.na(auck_el1$band1)) + nrow(slot(auck_el2, \"coords\"))\nprod(slot(slot(auck_el2, \"grid\"), \"cells.dim\"))\n\n\n###################################################\n### code chunk number 96: cm.Rnw:1909-1912\n###################################################\nauck_el_500 <- auck_el2[auck_el2$band1 > 500,]\nsummary(auck_el_500)\nobject.size(auck_el_500)\n\n\n###################################################\n### code chunk number 97: cm.Rnw:1932-1938\n###################################################\ndata(meuse.grid)\nmg_SP <- SpatialPoints(cbind(meuse.grid$x, meuse.grid$y))\nsummary(mg_SP)\nmg_SPix0 <- SpatialPixels(mg_SP)\nsummary(mg_SPix0)\nprod(slot(slot(mg_SPix0, \"grid\"), \"cells.dim\"))\n\n\n###################################################\n### code chunk number 98: cm.Rnw:1955-1957\n###################################################\nmg_SPix1 <- as(mg_SP, \"SpatialPixels\")\nsummary(mg_SPix1)\n\n\n###################################################\n### code chunk number 100: cm.Rnw:1983-1984\n###################################################\nlibrary(raster)\n\n\n###################################################\n### code chunk number 101: cm.Rnw:1986-1987\n###################################################\nr <- raster(\"70042108.tif\")\n\n\n###################################################\n### code chunk number 103: cm.Rnw:1992-1998\n###################################################\nclass(r)\ninMemory(r)\nobject.size(r)\ncellStats(r, max)\ncellStats(r, min)\ninMemory(r)\n\n\n###################################################\n### code chunk number 104: cm.Rnw:2012-2024\n###################################################\nout <- raster(r)\nbs <- blockSize(out)\nout <- writeStart(out, filename=tempfile(), overwrite=TRUE)\nfor (i in 1:bs$n) {\n    v <- getValues(r, row=bs$row[i], nrows=bs$nrows[i])\n    v[v <= 0] <- NA\n    writeValues(out, v, bs$row[i])\n}\nout <- writeStop(out)\ncellStats(out, min)\ncellStats(out, max)\ninMemory(out)\n\n\n###################################################\n### code chunk number 106: cm.Rnw:2044-2052\n###################################################\nplot(out, col=terrain.colors(100))\nplot(auck_gshhs, add=TRUE)\n\n\n###################################################\n### code chunk number 107: cm.Rnw:2069-2073\n###################################################\nr1 <- as(out, \"SpatialGridDataFrame\")\nsummary(r1)\nr2 <- as(r1, \"RasterLayer\")\nsummary(r2)\n\n\n\n",
    "created" : 1391965121135.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "886539121",
    "id" : "4608A64C",
    "lastKnownWriteTime" : 1391965464,
    "path" : "D:/Dropbox/Research/Codes/R/SpatialData/Chapter2/cm_mod.R",
    "project_path" : "cm_mod.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}