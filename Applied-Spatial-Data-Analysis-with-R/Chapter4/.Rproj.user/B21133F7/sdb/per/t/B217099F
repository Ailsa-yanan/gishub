{
    "contents" : "### R code from vignette source 'die.Rnw'\n### Encoding: UTF-8\n# data: scotland.dat scot geohub.RData fires_120104 70042108.tif getosm.RData osm_bergen_120105.tif RgoogleMaps.RData osmar.RData \n###################################################\n### code chunk number 9: die.Rnw:95-96\n###################################################\nlibrary(rgdal)\n\n\n###################################################\n### code chunk number 14: die.Rnw:264-266\n###################################################\nEPSG <- make_EPSG()\nEPSG[grep(\"^# ED50$\", EPSG$note),]\n\n\n###################################################\n### code chunk number 15: die.Rnw:306-307\n###################################################\nCRS(\"+init=epsg:4230\")\n\n\n###################################################\n### code chunk number 16: die.Rnw:330-332\n###################################################\nED50 <- CRS(\"+init=epsg:4230 +towgs84=-87,-96,-120,0,0,0,0\")\nED50\n\n\n###################################################\n### code chunk number 17: die.Rnw:358-368\n###################################################\nIJ.east <- as(char2dms(\"4d31\\'00\\\"E\"), \"numeric\")\nIJ.north <- as(char2dms(\"52d28\\'00\\\"N\"), \"numeric\")\nIJ.ED50 <- SpatialPoints(cbind(x=IJ.east, y=IJ.north), proj4string=ED50)\nres <- spTransform(IJ.ED50, CRS(\"+proj=longlat +datum=WGS84\"))\nx <- as(dd2dms(coordinates(res)[1]), \"character\")\ny <- as(dd2dms(coordinates(res)[2], TRUE), \"character\")\ncat(x, y, \"\\n\")\nspDistsN1(coordinates(IJ.ED50), coordinates(res), longlat=TRUE)*1000\nlibrary(maptools)\ngzAzimuth(coordinates(IJ.ED50), coordinates(res))\n\n\n###################################################\n### code chunk number 19: die.Rnw:430-434\n###################################################\nproj4string(IJ.ED50) <- CRS(\"+init=epsg:4230\")\nres <- spTransform(IJ.ED50, CRS(\"+proj=longlat +datum=WGS84\"))\nspDistsN1(coordinates(IJ.ED50), coordinates(res), longlat=TRUE)*1000\ngzAzimuth(coordinates(IJ.ED50), coordinates(res))\n\n\n###################################################\n### code chunk number 21: die.Rnw:449-450\n###################################################\nEPSG[grep(\"Atlas\", EPSG$note), 1:2]\n\n\n###################################################\n### code chunk number 22: die.Rnw:452-453 \n###################################################\nCRS(\"+init=epsg:2163\")\n\n\n###################################################\n### code chunk number 24: die.Rnw:475-479\n###################################################\nproj <- projInfo(\"proj\")\nproj[proj$name == \"laea\",]\nellps <- projInfo(\"ellps\")\nellps[grep(\"a=6370997\", ellps$major),]\n\n\n###################################################\n### code chunk number 25: die.Rnw:521-523\n###################################################\nIJ.dms.E <- \"4d31\\'00\\\"E\"\nIJ.dms.N <- \"52d28\\'00\\\"N\"\n\n\n###################################################\n### code chunk number 26: die.Rnw:533-538\n###################################################\nIJ_east <- char2dms(IJ.dms.E)\nIJ_north <- char2dms(IJ.dms.N)\nIJ_east\nIJ_north\ngetSlots(\"DMS\")\n\n\n###################################################\n### code chunk number 27: die.Rnw:552-553\n###################################################\nc(as(IJ_east, \"numeric\"), as(IJ_north, \"numeric\"))\n\n\n###################################################\n### code chunk number 28: die.Rnw:672-673\n###################################################\nhead(ogrDrivers(), n=10)\n\n\n###################################################\n### code chunk number 31: die.Rnw:733-735\n###################################################\nscot_dat <- read.table(\"scotland.dat\", skip=1)\nnames(scot_dat) <- c(\"District\", \"Observed\", \"Expected\", \"PcAFF\", \"Latitude\", \"Longitude\")\n\n\n###################################################\n### code chunk number 34: die.Rnw:760-761\n###################################################\nogrInfo(\".\", \"scot\")\n\n\n###################################################\n### code chunk number 37: die.Rnw:791-794\n###################################################\nscot_LL <- readOGR(dsn=\".\", layer=\"scot\")\nproj4string(scot_LL)\nproj4string(scot_LL) <- CRS(\"+proj=longlat +ellps=WGS84\")\n\n\n###################################################\n### code chunk number 39: die.Rnw:803-805\n###################################################\nsapply(slot(scot_LL, \"data\"), class)\nscot_LL$ID\n\n\n###################################################\n### code chunk number 40: die.Rnw:817-825\n###################################################\nscot_dat$District\nID_D <- match(scot_LL$ID, scot_dat$District)\nscot_dat1 <- scot_dat[ID_D,]\nrow.names(scot_dat1) <- row.names(scot_LL)\nlibrary(maptools)\nscot_LLa <- spCbind(scot_LL, scot_dat1)\nall.equal(scot_LLa$ID, scot_LLa$District)\nnames(scot_LLa)\n\n\n###################################################\n### code chunk number 41: die.Rnw:846-852\n###################################################\nlibrary(spdep)\nO <- scot_LLa$Observed\nE <- scot_LLa$Expected\nscot_LLa$SMR <- probmap(O, E)$relRisk/100\nlibrary(DCluster)\nscot_LLa$smth <- empbaysmooth(O, E)$smthrr\n\n\n###################################################\n### code chunk number 42: die.Rnw:863-864\n###################################################\nscot_BNG <- spTransform(scot_LLa, CRS(\"+init=epsg:27700\"))\n\n\n###################################################\n### code chunk number 43: die.Rnw:868-869\n###################################################\nlibrary(RColorBrewer)\n\n\n###################################################\n### code chunk number 44: die.Rnw:874-887\n###################################################\nspplot(scot_BNG, c(\"SMR\", \"smth\"),\n at=c(0, 0.25, 0.5, 0.8, 1, 1.5, 2.5, 4.5, 7),\n col.regions=rev(brewer.pal(8, \"RdBu\")))\n\n\n###################################################\n### code chunk number 45: die.Rnw:907-909\n###################################################\ndrv <- \"ESRI Shapefile\"\nwriteOGR(scot_BNG, dsn=\".\", layer=\"scot_BNG\", driver=drv, overwrite_layer=TRUE)\n\n\n###################################################\n### code chunk number 46: die.Rnw:911-912\n###################################################\nlist.files(pattern=\"^scot_BNG\")\n\n\n###################################################\n### code chunk number 47: die.Rnw:941-942\n###################################################\nload(\"geohub.RData\")\n\n\n###################################################\n### code chunk number 48: die.Rnw:944-946 (eval = FALSE)\n###################################################\n## dsn <- \"WFS:http://geohub.jrc.ec.europa.eu/effis/ows\"\n## ogrListLayers(dsn)\n\n\n###################################################\n### code chunk number 49: die.Rnw:949-950\n###################################################\nprint(layers)\n\n\n###################################################\n### code chunk number 50: die.Rnw:952-953 (eval = FALSE)\n###################################################\n## Fires <- readOGR(dsn, \"EFFIS:FiresAll\")\n\n\n###################################################\n### code chunk number 51: die.Rnw:955-956\n###################################################\ngeohub\n\n\n###################################################\n### code chunk number 53: die.Rnw:961-962\n###################################################\nFires <- readOGR(\".\", \"fires_120104\")\n\n\n###################################################\n### code chunk number 55: die.Rnw:967-968\n###################################################\nnames(Fires)\n\n\n###################################################\n### code chunk number 56: die.Rnw:986-996\n###################################################\nx <- c(-15, -15, 38, 38, -15)\ny <- c(28, 62, 62, 28, 28)\ncrds <- cbind(x=x, y=y)\nbb <- SpatialPolygons(list(Polygons(list(Polygon(coords=crds)), \"1\")))\nlibrary(maptools)\ndata(wrld_simpl)\nproj4string(bb) <- CRS(proj4string(wrld_simpl))\nlibrary(rgeos)\nslbb <- gIntersection(bb, as(wrld_simpl, \"SpatialLines\"))\nspl <- list(\"sp.lines\", slbb, lwd=0.7, col=\"khaki4\")\n\n\n###################################################\n### code chunk number 57: die.Rnw:1013-1018\n###################################################\nFires$dt <- as.Date(as.character(Fires$FireDate), format=\"%d-%m-%Y\")\nFires0 <- Fires[-which(coordinates(Fires)[,2] < 0),]\nFires1 <- Fires0[order(Fires0$dt),]\nlibrary(spacetime)\nFires2 <- STIDF(as(Fires1, \"SpatialPoints\"), Fires1$dt, as(Fires1, \"data.frame\"))\n\n\n###################################################\n### code chunk number 58: die.Rnw:1020-1021 \n###################################################\nstplot(as(Fires2, \"STI\"), number=3, sp.layout=spl, cex=0.5)\n\n\n###################################################\n### code chunk number 60: die.Rnw:1057-1060\n###################################################\nnames(Fires1)[1] <- \"name\"\nGR_Fires <- Fires1[Fires1$Country == \"GR\",]\nwriteOGR(GR_Fires, \"EFFIS.gpx\", \"waypoints\", driver=\"GPX\", dataset_options=\"GPX_USE_EXTENSIONS=YES\", overwrite_layer=TRUE, delete_dsn=TRUE)\n\n\n###################################################\n### code chunk number 61: die.Rnw:1071-1073\n###################################################\nGR <- readOGR(\"EFFIS.gpx\", \"waypoints\")\nGR[1,c(5,24:28)]\n\n\n###################################################\n### code chunk number 63: die.Rnw:1107-1108\n###################################################\ngetinfo.shape(\"scot_BNG.shp\")\n\n\n###################################################\n### code chunk number 66: die.Rnw:1178-1181\n###################################################\nauck_el1 <- readGDAL(\"70042108.tif\")\nsummary(auck_el1)\nis.na(auck_el1$band1) <- auck_el1$band1 <= 0 | auck_el1$band1 > 1e+4\n\n\n###################################################\n### code chunk number 69: die.Rnw:1204-1211\n###################################################\nx <- GDAL.open(\"70042108.tif\")\nxx <- getDriver(x)\n#xx #do not show pointer\ngetDriverLongName(xx)\n#x #do not show pointer\ndim(x)\nGDAL.close(x)\n\n\n###################################################\n### code chunk number 74: die.Rnw:1263-1272\n###################################################\nbrks <- c(0,10,20,50,100,150,200,300,400,500,600,700)\npal <- terrain.colors(11)\npal\nlength(pal) == length(brks)-1\nauck_el1$band1 <- findInterval(auck_el1$band1, vec=brks, all.inside=TRUE)-1\nwriteGDAL(auck_el1, \"demIndex.tif\", drivername=\"GTiff\", type=\"Byte\", colorTable=list(pal), mvFlag=length(brks)-1)\nGi <- GDALinfo(\"demIndex.tif\", returnColorTable=TRUE)\nCT <- attr(Gi, \"ColorTable\")[[1]]\nCT[CT > \"#000000\"]\n\n\n###################################################\n### code chunk number 76: die.Rnw:1296-1303\n###################################################\ndata(meuse.grid)\ncoordinates(meuse.grid) <- c(\"x\", \"y\")\ngridded(meuse.grid) <- TRUE\nproj4string(meuse.grid) <- CRS(\"+init=epsg:28992\")\ndata(meuse)\ncoordinates(meuse) <- c(\"x\", \"y\")\nproj4string(meuse) <- CRS(proj4string(meuse.grid))\n\n\n###################################################\n### code chunk number 77: die.Rnw:1308-1310\n###################################################\nlibrary(gstat)\nlog_zinc <- gstat::idw(log(zinc)~1, meuse, meuse.grid)[\"var1.pred\"]\n\n\n###################################################\n### code chunk number 78: die.Rnw:1312-1314\n###################################################\nsummary(log_zinc)\nwriteGDAL(log_zinc, fname=\"log_zinc.tif\", drivername=\"GTiff\", type=\"Float32\", options=\"INTERLEAVE=PIXEL\")\n\n\n###################################################\n### code chunk number 79: die.Rnw:1316-1317 \n###################################################\nGDALinfo(\"log_zinc.tif\")\n\n\n###################################################\n### code chunk number 82: die.Rnw:1346-1354\n###################################################\nSoil <- meuse.grid[\"soil\"]\ntable(Soil$soil)\nSoil$soil <- as.integer(Soil$soil)-1\nCn <- c(\"Rd10A\", \"Rd90C/VII\", \"Bkd26/VII\")\nwriteGDAL(Soil, \"Soil.tif\", drivername=\"GTiff\", type=\"Byte\", catNames=list(Cn), mvFlag=length(Cn))\nGi <- GDALinfo(\"Soil.tif\", returnCategoryNames=TRUE)\nattr(Gi, \"CATlist\")[[1]]\nsummary(readGDAL(\"Soil.tif\"))\n\n\n###################################################\n### code chunk number 84: die.Rnw:1368-1369\n###################################################\nhead(gdalDrivers(), n=10)\n\n\n###################################################\n### code chunk number 90: die.Rnw:1410-1413 (eval = FALSE)\n###################################################\n## service_xml <- \"frmt_wms_openstreetmap_tms.xml\"\n## offset <- c(19339000, 34546000)\n## osm <- readGDAL(service_xml, offset=offset, region.dim=c(2000, 2000), output.dim=c(1000, 1000))\n\n\n###################################################\n### code chunk number 92: die.Rnw:1418-1420\n###################################################\nload(\"getosm.RData\")\ncat(paste(strwrap(getosm, exdent=5), collapse=\"\\n\"), \"\\n\")\n\n\n###################################################\n### code chunk number 94: die.Rnw:1425-1426\n###################################################\nosm <- readGDAL(\"osm_bergen_120105.tif\")\n\n\n###################################################\n### code chunk number 96: die.Rnw:1431-1432\n###################################################\nsummary(osm)\n\n\n###################################################\n### code chunk number 97: die.Rnw:1441-1450\n###################################################\nimage(osm, red=1, green=2, blue=2)\n\n\n###################################################\n### code chunk number 98: die.Rnw:1497-1498\n###################################################\nload(\"RgoogleMaps.RData\")\n\n\n###################################################\n### code chunk number 99: die.Rnw:1501-1503 (eval = FALSE)\n###################################################\n## library(RgoogleMaps)\n## myMap <- GetMap(center=c(60.395, 5.322), zoom =16, destfile = \"MyTile2.png\", maptype = \"mobile\")\n\n\n###################################################\n### code chunk number 100: die.Rnw:1505-1513\n###################################################\nBB <- do.call(\"rbind\", myMap$BBOX)\ndBB <- rev(diff(BB))\nDIM12 <- dim(myMap$myTile)[1:2]\ncs <- dBB/DIM12\ncc <- c(BB[1,2] + cs[1]/2, BB[1,1] + cs[2]/2)\nGT <- GridTopology(cc, cs, DIM12)\np4s <- CRS(\"+proj=longlat +datum=WGS84\")\nSG_myMap <- SpatialGridDataFrame(GT, proj4string=p4s, data=data.frame(r=c(t(myMap$myTile[,,1]))*255, g=c(t(myMap$myTile[,,2]))*255, b=c(t(myMap$myTile[,,3]))*255))\n\n\n###################################################\n### code chunk number 101: die.Rnw:1515-1516 (eval = FALSE)\n###################################################\n## myMap1 <- GetMap.OSM(lonR = c(5.3190, 5.3280), latR = c(60.392, 60.398), scale=4000, destfile = \"MyTile.png\")\n\n\n###################################################\n### code chunk number 102: die.Rnw:1535-1537\n###################################################\nlibrary(osmar)\nload(\"osmar.RData\")\n\n\n###################################################\n### code chunk number 103: die.Rnw:1540-1544 (eval = FALSE)\n###################################################\n## library(osmar)\n## api <- osmsource_api()\n## box <- corner_bbox(5.3190, 60.392, 5.3280, 60.398)\n## torget <- get_osm(box, source = api)\n\n\n###################################################\n### code chunk number 104: die.Rnw:1546-1547\n###################################################\ntorget1 <- as_sp(torget, \"lines\")\n\n\n###################################################\n### code chunk number 105: die.Rnw:1548-1549 \n###################################################\nsort(table(torget1$user), decreasing=TRUE)[1:3]\n\n\n###################################################\n### code chunk number 107: die.Rnw:1572-1576\n###################################################\nbybane <- find(torget, way(tags(k == \"light_rail\")))\nbybane <- find_down(torget, way(bybane))\nbybane <- subset(torget, ids=bybane)\nbybane <- as_sp(bybane, \"lines\")\n\n\n###################################################\n### code chunk number 108: die.Rnw:1583-1596\n###################################################\nimage(SG_myMap, red=1, green=2, blue=3)\nplot(torget1, add=TRUE)\nplot(bybane, add=TRUE, lwd=5, col=\"orange2\")\nplot(0:1, 0:1, type = \"n\", axes = FALSE, asp=1)\nrasterImage(myMap1[[4]], 0, 0, 1, 1)\n\n\n###################################################\n### code chunk number 110: die.Rnw:1614-1615\n###################################################\nwriteOGR(Fires[,c(\"gml_id\", \"FireDate\", \"Area_HA\")], dsn=\"fires.kml\", layer=\"fires\", driver=\"KML\", overwrite_layer=TRUE)\n\n\n###################################################\n### code chunk number 111: die.Rnw:1673-1679\n###################################################\nlibrary(maptools)\ngrd <- as(meuse.grid, \"SpatialPolygons\")\nproj4string(grd) <- CRS(proj4string(meuse))\ngrd.union <- unionSpatialPolygons(grd, rep(\"x\", length(slot(grd, \"polygons\"))))\nll <- CRS(\"+proj=longlat +datum=WGS84\")\ngrd.union.ll <- spTransform(grd.union, ll)\n\n\n###################################################\n### code chunk number 112: die.Rnw:1703-1707\n###################################################\nllGRD <- GE_SpatialGrid(grd.union.ll)\nllGRD_in <- over(llGRD$SG, grd.union.ll)\nllSGDF <- SpatialGridDataFrame(grid=slot(llGRD$SG, \"grid\"), proj4string=CRS(proj4string(llGRD$SG)), data=data.frame(in0=llGRD_in))\nllSPix <- as(llSGDF, \"SpatialPixelsDataFrame\")\n\n\n###################################################\n### code chunk number 113: die.Rnw:1722-1724\n###################################################\nmeuse_ll <- spTransform(meuse, CRS(\"+proj=longlat +datum=WGS84\"))\nllSPix$pred <- gstat::idw(log(zinc)~1, meuse_ll, llSPix)$var1.pred\n\n\n###################################################\n### code chunk number 114: die.Rnw:1744-1749\n###################################################\npng(file=\"zinc_IDW.png\", width=llGRD$width, height=llGRD$height, bg=\"transparent\")\npar(mar=c(0,0,0,0), xaxs=\"i\", yaxs=\"i\")\nimage(llSPix, \"pred\", col=bpy.colors(20))\ndev.off()\nkmlOverlay(llGRD, \"zinc_IDW.kml\", \"zinc_IDW.png\")\n\n###################################################\nsource(\"die_snow.R\", echo=TRUE)\n\n",
    "created" : 1391969741210.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "769237983",
    "id" : "B217099F",
    "lastKnownWriteTime" : 1381421062,
    "path" : "D:/Dropbox/Research/Codes/R/SpatialData/Chapter4/die_mod.R",
    "project_path" : "die_mod.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}